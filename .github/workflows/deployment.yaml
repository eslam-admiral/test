on:
  push:
    branches:
      - staging
      - development
    tags:
        - 'v*'    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:       
    - name: Checkout master
      uses: actions/checkout@v2

    - id: file_changes
      name: File Changes
      uses: trilom/file-changes-action@v1.2.3
      with:
        prNumber: $
        pushBefore: ''
        pushAfter: ''

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200       

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: registry.digitalocean.com/${{ secrets.registry }}/python
        tags: |
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{version}},value=v1.0.0-${{github.run_number}}

    - name: Build python and push
      uses: docker/build-push-action@v2
      with:
        context: ./projects/python
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
      if: contains(steps.file_changes.outputs.files , '"projects/python')      

    # - name: Build python
    #   uses: flownative/action-docker-build@master
    #   with:
    #       context: ./projects/python
    #       tag_ref: ${{ github.ref }}
    #       image_name: registry.digitalocean.com/${{ secrets.registry }}/python:${{ github.ref }}-${{ github.run_number }}
    #       registry_password: 68a12a9d6b189a17ebd40cdc38a31e20edf148e0a939149ec1cc19ecfa7d4b93:68a12a9d6b189a17ebd40cdc38a31e20edf148e0a939149ec1cc19ecfa7d4b93
    #   if: contains(steps.file_changes.outputs.files , '"projects/python')    

    # - name: Build helloworld
    #   uses: flownative/action-docker-build@master
    #   with:
    #       tag_ref: ${{ github.ref }}
    #       image_name: registry.digitalocean.com/${{ secrets.registry }}/helloworld:${{ github.ref }}-${{github.run_number}}
    #   if: contains(steps.file_changes.outputs.files , '"projects/helloworld')    
          # registry_password: ${{ secrets.GITHUB_TOKEN }}
      # run: docker build -t registry.digitalocean.com/${{ secrets.registry }}/llsgscv-dev/helloworld:latest .  

    # - name: Log in to DigitalOcean Container Registry with short-lived credentials
    #   run: doctl registry login --expiry-seconds 1200    

    # - name: Push image to DigitalOcean Container Registry
    #   uses: flownative/action-docker-publish-semver@master
    #   with:
    #     tag_ref: ${{ github.ref }}
    #     tag_latest: 'yes'
    #     tag_custom: 'some-custom-tag'      
      # run: docker push registry.digitalocean.com/${{ secrets.registry }}/llsgscv-dev/helloworld:latest  

    # - name: Update deployment file
    #   run: TAG=latest && sed -i 's|<IMAGE>|registry.digitalocean.com/${{ secrets.registry }}/llsgscv-dev/helloworld:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

    # - name: Save DigitalOcean kubeconfig with short-lived credentials
    #   run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.cluster_name }}

    # - name: Deploy to DigitalOcean Kubernetes
    #   run: kubectl -n staging --record deployment.apps/${{GITHUB_WORKFLOW}} set image deployment.v1.apps/${{GITHUB_WORKFLOW}} registry.digitalocean.com/${{ secrets.registry }}/${{GITHUB_WORKFLOW}}:${{ github.ref }}-${{github.run_number}}
    #   # run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml

    # - name: Verify deployment
    #   run: kubectl -n staging rollout status deployment/${{GITHUB_WORKFLOW}}